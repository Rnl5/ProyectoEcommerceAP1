@page "/carrito"

@inject HttpClient httpClient

@rendermode InteractiveServer


@if (productoEnCarrito != null && productoEnCarrito.Any())
{

    <div class="container">
        <h2 class="text-center">Productos en el carrito</h2>
        <div class="table-responsive">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Imagen</th>
                        <th>Nombre</th>
                        <th>Descripción</th>
                        <th>Precio</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var producto in productoEnCarrito)
                    {
                        <tr>
                            <td> 
                                @if (!string.IsNullOrEmpty(producto.ImagenProducto))
                                {
                                    <img src="@producto.ImagenProducto" alt="Imagen del producto" class="img-fluid rounded" style="max-width: 100px;" />
                                }
                            </td>
                            <td>@producto.Nombre</td>
                            <td>@producto.Descripcion</td>
                            <td>RD$ @producto.Precio.ToString("N2")</td>
                            <td>
                                <button type ="button" @onclick="() => RemoverItemCarrito(producto.ItemCarritoId.Value)" class="btn btn-danger">Eliminar</button>
                            </td>
                        </tr>
                    }
                </tbody>

                <tfoot>
                    <tr>
                        <td colspan="3" class="text-right">Total:</td>
                        <td class="text-right">RD$ @precioAPagar</td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
}

else
{
    <p class="text-center">No hay productos en el carrito</p>
}



@code {
    List<Productos> productoEnCarrito;

    public Productos producto { get; set; }

    float precioAPagar;


    protected override async Task OnInitializedAsync()
    {
        await CargarProductosEnCarrito();
        CalcularTotalPrecioCarrito();
    }

    async Task CargarProductosEnCarrito()
    {
        try
        {
            productoEnCarrito = await httpClient.GetFromJsonAsync<List<Productos>>("api/Productos/EnCarrito");

            if (productoEnCarrito != null)
            {
                foreach (var producto in productoEnCarrito)
                {
                    var itemCarrito = await ObtenerItemCarrito(producto.ProductoId);

                    if (itemCarrito != null)
                    {
                        producto.ItemCarritoId = itemCarrito.ItemCarritoId;
                    }
                }
            }

        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al cargar productos en el carrito: {ex.Message}");
        }
    }

    async Task<ItemCarrito> ObtenerItemCarrito(int productoId)
    {
        var response = await httpClient.GetFromJsonAsync<ItemCarrito>($"api/Carrito/Producto/{productoId}");
        return response;
    }


    void CalcularTotalPrecioCarrito()
    {
        precioAPagar = productoEnCarrito.Sum(p => p.Precio);

        StateHasChanged();
    }



    public async Task RemoverItemCarrito(int itemCarritoId)
    {
        if (itemCarritoId > 0)
        {
            using var response = await httpClient.DeleteAsync($"api/Carrito/EliminarDetalle/{itemCarritoId}");

            if (!response.IsSuccessStatusCode)
            {
                return;
            }
            else
            {
                var itemToRemove = productoEnCarrito.FirstOrDefault(item => item.ItemCarritoId == itemCarritoId);

                var producto = await httpClient.GetFromJsonAsync<Productos>($"api/Productos/{itemToRemove.ProductoId}");


                producto.EnCarrito = false;
                itemToRemove.EnCarrito = false;

                var response2 = await httpClient.PutAsJsonAsync($"api/Productos/{producto.ProductoId}", producto);



                if (itemToRemove != null)
                {
                    productoEnCarrito.Remove(itemToRemove);
                }
                CalcularTotalPrecioCarrito();
            }
        }
    }
}