@page "/CatalogoProductos"

@inject HttpClient httpClient


<div class="container">
    <div class="row">
        @foreach(var item in CategoriaId == null ? productos : productos.Where(p => p.CategoriaId == CategoriaId))
        {
            <div class="col-md-4 mb-3">
                <div class="card">
                    <div class="img-container">
                        @if (!string.IsNullOrEmpty(item.ImagenProducto))
                        {
                            <img src="@item.ImagenProducto" alt="Imagen del producto" class="img-fluid" />
                        }
                        else
                        {
                            <p>No hay imagen</p>
                        }

                    </div>

                    <div class="card-body">
                        <h6><strong>Nombre:</strong></h6>
                        <div class="mb-3">
                            @item.Nombre
                        </div>

                        <h6><strong>Descripción</strong></h6>
                        <div class="mb-3">
                            @item.Descripcion
                        </div>

                        <h6><strong>Precio:</strong></h6>
                        <div class="mb-3">
                            RD$ @item.Precio
                        </div>
                        <a href="/detalleProducto/@item.ProductoId"><button type="button" class="btn btn-info">Ver mas</button></a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>





@code {
    public int? CategoriaId { get; set; } = null;

    public Productos producto { get; set; }

    public List<Productos> productos { get; set; } = new List<Productos>();

    protected override async Task OnInitializedAsync()
    {
        productos = await httpClient.GetFromJsonAsync<List<Productos>>("api/Productos");
    }
}
