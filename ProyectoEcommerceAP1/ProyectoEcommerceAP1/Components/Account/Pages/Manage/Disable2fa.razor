@page "/Account/Manage/Disable2fa"

@using Microsoft.AspNetCore.Identity
@using ProyectoEcommerceAP1.Data

@inject UserManager<ApplicationUser> UserManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<Disable2fa> Logger

<PageTitle>Deshabilitar la autenticación de dos factores (2FA)</PageTitle>

<StatusMessage />
<h3>Deshabilitar la autenticación de dos factores (2FA)</h3>

<div class="alert alert-warning" role="alert">
    <p>
        <strong>Esta acción solo desactiva la 2FA</strong>
    </p>
    <p>
        Deshabilitar 2FA no cambia las claves utilizadas en las aplicaciones de autenticación. Si desea cambiar la clave
        utilizado en una aplicación de autenticación, debe <a href="Account/Manage/ResetAuthenticator">restablecer sus claves de autenticación.</a>
    </p>
</div>

<div>
    <form @formname="disable-2fa" @onsubmit="OnSubmitAsync" method="post">
        <AntiforgeryToken />
        <button class="btn btn-danger" type="submit">Deshabilitar la 2FA</button>
    </form>
</div>

@code {
    private ApplicationUser user = default!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);

        if (HttpMethods.IsGet(HttpContext.Request.Method) && !await UserManager.GetTwoFactorEnabledAsync(user))
        {
            throw new InvalidOperationException("No se puede desactivar 2FA para el usuario porque actualmente no está habilitado.");
        }
    }

    private async Task OnSubmitAsync()
    {
        var disable2faResult = await UserManager.SetTwoFactorEnabledAsync(user, false);
        if (!disable2faResult.Succeeded)
        {
            throw new InvalidOperationException("Se produjo un error inesperado al desactivar la 2FA.");
        }

        var userId = await UserManager.GetUserIdAsync(user);
        Logger.LogInformation("El usuario con ID '{UserId}' ha desactivado 2fa.", userId);
        RedirectManager.RedirectToWithStatus(
            "Account/Manage/TwoFactorAuthentication",
            "2fa ha sido deshabilitado. Puede volver a habilitar 2fa cuando configure una aplicación de autenticación.",
            HttpContext);
    }
}
